var Promise = require('bluebird')
var mkdirp = Promise.promisify(require('mkdirp'))
var ncp = Promise.promisify(require('ncp').ncp)
var rimraf = Promise.promisify(require('rimraf'))
const writeFile = Promise.promisify(require('fs').writeFile)
var path = require('path')
var exec = Promise.promisify(require('child_process').exec)

mkdirp('dist/app/compilers/elm-compiler/temp')
  .then(() => ncp('app/compilers/elm-compiler/temp', 'dist/app/compilers/elm-compiler/temp'))
  .then(() => {
    process.chdir('dist/app/compilers/elm-compiler/temp')
    var elmPackageJson = require(path.join(process.cwd(), 'elm-package-template.js'))
    return writeFile('elm-package.json', JSON.stringify(elmPackageJson))
            .then(() => exec('rm -rf elm-stuff'))
            .then(() => rimraf('rm -rf elm-package.json'))
  })
  .then(() => exec('elm-package install -y'))
  .then(console.log)
  .catch(console.error)
